{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpanseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpensesDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","round","porps","maxValue","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4b0688d.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css'\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const onSaveExpenseDataHandler = (enteredExpanseData) => {\r\n        const expenseData = {\r\n            ...enteredExpanseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    return (\r\n        <div className = 'new-expense'> \r\n            <ExpenseForm onSaveExpenseData = {onSaveExpenseDataHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return (\r\n        <div className = {classes}>{props.children}</div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ExpensesDate.css'\r\n\r\nconst ExpensesDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', {month : 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    \r\n    return(\r\n    <div className = 'expense-date'>\r\n        <div className = 'expense-date__month'>{month}</div>\r\n        <div className = 'expense-date__year'>{year}</div>\r\n        <div className = 'expense-date__day'>{day}</div>    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ExpensesDate;","import React from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\nimport ExpensesDate from './ExpensesDate';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpensesDate date={props.date} />\r\n                <div className='expense-item__description'>\r\n                    <h2>{props.title}</h2>\r\n                    <div className='expense-item__price'>&#x20b9; {props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react'\r\nimport './ExpensesList.css'\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = props => {\r\n    \r\n    if(props.items.length === 0){\r\n        return <h2 className = 'expenses-list__fallback'>Expenses Not Found.</h2>;\r\n    }\r\n\r\n    return <ul className = 'expenses-list'>\r\n        {props.items.map((expense) => (\r\n            <ExpenseItem \r\n                key = {expense.id}\r\n                title={expense.title} \r\n                amount={expense.amount} \r\n                date={expense.date} \r\n            />\r\n        ))}\r\n    </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.max > 0){\r\n        barFillHeight = Math.round((props.value / porps.maxValue) * 100) + '%';\r\n    }\r\n    return <div className = 'chart-bar'>\r\n        <div className = 'chart-bar__inner'>\r\n            <div className = 'chart-bar__fill' style = {{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className = 'chart-bar__label'>{props.label}</div> \r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nimport Expenses from './components/Expenses/Expenses';\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: 'e1',\r\n    title: 'Toilet Paper',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  {\r\n    id: 'e2',\r\n    title: 'New TV',\r\n    amount: 999.49,\r\n    date: new Date(2021, 2, 12)\r\n  },\r\n  {\r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\n\r\nconst App = () => {\r\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = expense => {\r\n    setExpenses((prevExpenses) => {\r\n      return ([expense, ...prevExpenses]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}